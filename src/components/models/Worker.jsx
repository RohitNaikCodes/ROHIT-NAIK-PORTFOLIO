/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function Worker(props) {
  const group = useRef();
  const modelRef = useRef(); // main moving group

  const { nodes, materials, animations } = useGLTF("/models/scene-transformed.glb");
  const { actions, names } = useAnimations(animations, group);

  // âœ… Play the "Walk" animation when loaded
  useEffect(() => {
    if (actions["Walk"]) {
      actions["Walk"].reset().fadeIn(0.5).play();
      actions["Walk"].setLoop(THREE.LoopRepeat, Infinity); // loop continuously
    } else if (names.length > 0) {
      // fallback: play first animation if "Walk" doesn't exist
      actions[names[0]]?.play();
    }
  }, [actions, names]);

  // Gentle floating animation
  useFrame((state) => {
    if (modelRef.current) {
      modelRef.current.position.y = -1.5 + Math.sin(state.clock.elapsedTime) * 0.15;
    }
  });

  return (
    <group ref={group} {...props} dispose={null}>
      {/* Attach the modelRef here so we move the entire model */}
      <group ref={modelRef} name="Sketchfab_Scene">
        <group name="Object_5" position={[0, -0.8, 0]} scale={0.025}>
          <primitive object={nodes.mixamorigHips_01} />
        </group>

        <skinnedMesh
          name="Object_87"
          geometry={nodes.Object_87.geometry}
          material={materials.head}
          skeleton={nodes.Object_87.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
        />
        <skinnedMesh
          name="Object_89"
          geometry={nodes.Object_89.geometry}
          material={materials.bottom}
          skeleton={nodes.Object_89.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
        />
        <skinnedMesh
          name="Object_91"
          geometry={nodes.Object_91.geometry}
          material={materials.material}
          skeleton={nodes.Object_91.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
        />
        <skinnedMesh
          name="Object_93"
          geometry={nodes.Object_93.geometry}
          material={materials.eyes}
          skeleton={nodes.Object_93.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
        />
        <skinnedMesh
          name="Object_95"
          geometry={nodes.Object_95.geometry}
          material={materials.glasses}
          skeleton={nodes.Object_95.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
        />
        <skinnedMesh
          name="Object_97"
          geometry={nodes.Object_97.geometry}
          material={materials.teeth}
          skeleton={nodes.Object_97.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
        />
        <skinnedMesh
          name="Object_99"
          geometry={nodes.Object_99.geometry}
          material={materials.shoes}
          skeleton={nodes.Object_99.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
        />
        <skinnedMesh
          name="Object_101"
          geometry={nodes.Object_101.geometry}
          material={materials.eyes}
          skeleton={nodes.Object_101.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
        />
        <skinnedMesh
          name="Object_103"
          geometry={nodes.Object_103.geometry}
          material={materials.hair}
          skeleton={nodes.Object_103.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
        />
        <skinnedMesh
          name="Object_105"
          geometry={nodes.Object_105.geometry}
          material={materials.body}
          skeleton={nodes.Object_105.skeleton}
          rotation={[-Math.PI / 2, 0, 0]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/scene-transformed.glb");
